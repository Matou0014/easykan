create table users
(
    uuid                   uuid                  not null
        primary key,
    login                  varchar(64)           not null
        unique,
    display_name           varchar(64)           not null,
    email                  varchar(255)          not null
        unique,
    password_hash          varchar(255),
    created_at             timestamp             not null,
    last_login             timestamp,
    is_admin               boolean default false not null,
    can_auth_with_password boolean               not null
);

create table projects
(
    uuid       uuid         not null
        primary key,
    owner_uuid uuid         not null
        constraint fk_projects_user_uuid
            references users,
    name       varchar(255) not null
);

create table project_members
(
    project_uuid uuid   not null
        constraint fk_project_members_project_uuid
            references projects
            on delete cascade,
    member_uuid  uuid   not null
        constraint fk_project_members_user_uuid
            references users
            on delete cascade,
    permissions  bigint not null,
    primary key (project_uuid, member_uuid)
);

create index project_members_member_uuid_idx
    on project_members (member_uuid);

create index project_members_project_uuid_idx
    on project_members (project_uuid);

create index projects_name_idx
    on projects (name);

create index projects_owner_uuid_idx
    on projects (owner_uuid);

create table user_tokens
(
    id         bigint generated by default as identity
        primary key,
    selector   varchar(255)            not null
        unique,
    validator  varchar(255)            not null,
    user_uuid  uuid                    not null
        constraint fk_user_tokens_user_uuid
            references users
            on delete cascade,
    issued_at  timestamp default now() not null,
    expires_at timestamp               not null,
    revoked    boolean   default false not null
);

create index user_tokens_expires_at_idx
    on user_tokens (expires_at);

create index user_tokens_user_uuid_idx
    on user_tokens (user_uuid);

create index users_display_name_idx
    on users (display_name);