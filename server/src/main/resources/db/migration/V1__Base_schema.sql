CREATE TABLE "users" (
                         "id" uuid PRIMARY KEY NOT NULL,
                         "login" varchar(64) UNIQUE NOT NULL,
                         "display_name" varchar(64) NOT NULL,
                         "email" varchar(255) UNIQUE NOT NULL,
                         "password_hash" varchar(255),
                         "created_at" timestamp NOT NULL,
                         "last_login" timestamp,
                         "permissions" bigint NOT NULL
);

CREATE TABLE "user_tokens" (
                               "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               "selector" varchar(255) UNIQUE NOT NULL,
                               "validator" varchar(255) NOT NULL,
                               "user_id" uuid NOT NULL,
                               "issued_at" timestamp NOT NULL DEFAULT (now()),
                               "expires_at" timestamp NOT NULL,
                               "revoked" boolean NOT NULL DEFAULT false
);

CREATE TABLE "user_identities" (
                                   "id" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   "user_id" uuid NOT NULL,
                                   "provider_name" varchar(255) NOT NULL,
                                   "provider_id" varchar(255) NOT NULL
);

CREATE TABLE "projects" (
                            "id" uuid PRIMARY KEY NOT NULL,
                            "owner_id" uuid NOT NULL,
                            "name" varchar(255) NOT NULL,
                            "created_at" timestamp NOT NULL
);

CREATE TABLE "project_members" (
                                   "project_id" uuid NOT NULL,
                                   "member_id" uuid NOT NULL,
                                   "permissions" bigint NOT NULL,
                                   PRIMARY KEY ("project_id", "member_id")
);

CREATE TABLE "boards" (
                          "id" uuid PRIMARY KEY NOT NULL,
                          "project_id" uuid NOT NULL,
                          "owner_id" uuid NOT NULL,
                          "name" varchar(64) NOT NULL
);

CREATE TABLE "columns" (
                           "id" uuid PRIMARY KEY NOT NULL,
                           "board_id" uuid NOT NULL,
                           "name" varchar(64) NOT NULL
);

CREATE INDEX "users_login_idx" ON "users" ("login");

CREATE INDEX "users_display_name_idx" ON "users" ("display_name");

CREATE INDEX "user_tokens_user_id_idx" ON "user_tokens" ("user_id");

CREATE INDEX "user_tokens_expires_at_idx" ON "user_tokens" ("expires_at");

CREATE INDEX "user_identities_user_id" ON "user_identities" ("user_id");

CREATE INDEX "projects_owner_id_idx" ON "projects" ("owner_id");

CREATE INDEX "projects_name_idx" ON "projects" ("name");

CREATE INDEX "project_members_member_id_idx" ON "project_members" ("member_id");

CREATE INDEX "project_members_project_id_idx" ON "project_members" ("project_id");

ALTER TABLE "columns" ADD CONSTRAINT "fk_boards_id_columns_board_id" FOREIGN KEY ("board_id") REFERENCES "boards" ("id") ON DELETE CASCADE;

ALTER TABLE "boards" ADD CONSTRAINT "fk_projects_id_boards_project_id" FOREIGN KEY ("project_id") REFERENCES "projects" ("id") ON DELETE CASCADE;

ALTER TABLE "boards" ADD CONSTRAINT "fk_users_id_boards_owner_id" FOREIGN KEY ("owner_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "user_identities" ADD CONSTRAINT "users_id_user_identities_user_id" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "projects" ADD CONSTRAINT "users_id_projects_owner_id" FOREIGN KEY ("owner_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "project_members" ADD CONSTRAINT "projects_id_project_members_project_id" FOREIGN KEY ("project_id") REFERENCES "projects" ("id") ON DELETE CASCADE;

ALTER TABLE "project_members" ADD CONSTRAINT "users_id_project_members_member_id" FOREIGN KEY ("member_id") REFERENCES "users" ("id") ON DELETE CASCADE;

ALTER TABLE "user_tokens" ADD CONSTRAINT "users_id_user_tokens_user_id" FOREIGN KEY ("user_id") REFERENCES "users" ("id") ON DELETE CASCADE;
