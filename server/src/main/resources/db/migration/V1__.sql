CREATE SEQUENCE IF NOT EXISTS project_members_permission_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS user_tokens_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE project_members
(
    project_uuid CHAR(36)                                NOT NULL,
    member_uuid  CHAR(36)                                NOT NULL,
    permissions  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    CONSTRAINT project_members_pkey PRIMARY KEY (project_uuid, member_uuid)
);

CREATE TABLE projects
(
    uuid       CHAR(36)     NOT NULL,
    owner_uuid CHAR(36)     NOT NULL,
    name       VARCHAR(255) NOT NULL,
    CONSTRAINT projects_pkey PRIMARY KEY (uuid)
);

CREATE TABLE user_tokens
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    selector   VARCHAR(255)                            NOT NULL,
    validator  VARCHAR(255)                            NOT NULL,
    user_uuid  CHAR(36)                                NOT NULL,
    issued_at  TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    expires_at TIMESTAMP WITHOUT TIME ZONE               NOT NULL,
    revoked    BOOLEAN DEFAULT FALSE                   NOT NULL,
    CONSTRAINT user_tokens_pkey PRIMARY KEY (id)
);

CREATE TABLE users
(
    uuid                   CHAR(36)              NOT NULL,
    login                  VARCHAR(64)           NOT NULL,
    display_name           VARCHAR(64)           NOT NULL,
    email                  VARCHAR(255)          NOT NULL,
    password               VARCHAR(255),
    created_at             TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    last_login             TIMESTAMP WITHOUT TIME ZONE,
    is_admin               BOOLEAN DEFAULT FALSE NOT NULL,
    can_auth_with_password BOOLEAN               NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (uuid)
);

ALTER TABLE user_tokens
    ADD CONSTRAINT user_tokens_selector_key UNIQUE (selector);

ALTER TABLE users
    ADD CONSTRAINT users_email_key UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT users_login_key UNIQUE (login);

CREATE INDEX projects_name_idx ON projects (name);

CREATE INDEX user_tokens_expires_at_idx ON user_tokens (expires_at);

CREATE INDEX users_display_name_idx ON users (display_name);

ALTER TABLE project_members
    ADD CONSTRAINT fk_project_members_project_uuid FOREIGN KEY (project_uuid) REFERENCES projects (uuid) ON DELETE CASCADE;

CREATE INDEX project_members_project_uuid_idx ON project_members (project_uuid);

ALTER TABLE project_members
    ADD CONSTRAINT fk_project_members_user_uuid FOREIGN KEY (member_uuid) REFERENCES users (uuid) ON DELETE CASCADE;

CREATE INDEX project_members_member_uuid_idx ON project_members (member_uuid);

ALTER TABLE projects
    ADD CONSTRAINT fk_projects_user_uuid FOREIGN KEY (owner_uuid) REFERENCES users (uuid) ON DELETE NO ACTION;

CREATE INDEX projects_owner_uuid_idx ON projects (owner_uuid);

ALTER TABLE user_tokens
    ADD CONSTRAINT fk_user_tokens_user_uuid FOREIGN KEY (user_uuid) REFERENCES users (uuid) ON DELETE CASCADE;

CREATE INDEX user_tokens_user_uuid_idx ON user_tokens (user_uuid);